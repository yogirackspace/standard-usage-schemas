<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">
]>


<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook"
    xml:id="feeds-pubguide">
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>Rackspace Cloud Feeds™ Publisher's Guide</title>
    <?rax status.bar.text="RAX INTERNAL"?>


    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Rackspace Cloud</orgname>
            </affiliation>
        </author>
        <copyright>
            <year>2014</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1.0</releaseinfo>
        <productname>Rackspace Cloud Feeds™</productname>
        <pubdate/>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the
                    template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for Rackspace Cloud Feeds™ customers who want to submit
                a feed to be published by Cloud Feeds. </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2014-10-10</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Published the initial internal release of the Cloud Feeds
                                Publisher's Guide.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
        <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
            <raxm:displayname>Cloud Feeds Publisher's Guide</raxm:displayname>
            <raxm:product version="v1.0">cloud-feeds</raxm:product>
            <raxm:priority>80</raxm:priority>
        </raxm:metadata>
    </info>




    <chapter xml:id="Cloud_Feeds_Overview">
        <title>Defining and publishing events</title>
        <para>Rackspace Cloud Feeds™ supports the publication of <emphasis role="italic"
                >events</emphasis> that are collected in a <emphasis role="italic">feed</emphasis>.
            Events have a specific format, and you can have multiple types of events in a single
            feed.</para>
        <para>Cloud Feeds uses AtomPub to publish different types of feeds. AtomPub is based on an
            HTTP transfer of Atom-formatted representations. The Atom format is documented in the
            Atom Syndication Format.</para>
        <para>Cloud Feeds events must be defined using the Common Event Format (CEF). The Usage
            Measurement Service (UMS) uses CEF for tracking, but CEF can be also used for other
            events and by third-party event publishers. CEF supports versioning of the event and
            product nodes through the <emphasis role="italic">version</emphasis> attribute, which
            enables products to release new versions of their schema.</para>
        <para>To read the official documentation for the Atom Syndication Format, see <link
                xlink:href="http://tools.ietf.org/search/rfc4287#section-4.1">RFC 4287</link>. For
            more information about AtomPub, visit <link xlink:href="http://atompub.org/"
                >http://atompub.org/</link>.</para>
        <section xml:id="Event_Categories">
            <title>Event categories</title>
            <para>Cloud Feeds supports the following event categories:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Usage events</emphasis> record information about
                            how much a resource is being used over a specified time period —for
                            example, how much bandwidth, disk space or CPU cycles are being
                            used.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">System events</emphasis> are published to notify
                            subscribers about changes in their environments—for example, a server
                            has been provisioned, an IP address has been released, or an error state
                            has occurred in a VM. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">User access events</emphasis> are generated when
                            a user attempts to access a specific API—for example, if a user requests
                            that a server be shut down. </para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section xml:id="Event_format">
            <title>Feed format</title>
            <para>Currently, Cloud Feeds supports feeds in XML format. The feeds and events follow
                the <link xlink:href="http://tools.ietf.org/html/rfc4287">Atom Syndication
                    Format</link> and the API adheres to the <link
                    xlink:href="http://tools.ietf.org/html/rfc5023">Atom Publication
                Protocol</link>. A feed has the following structure.</para>
            <example>
                <title>Feed structure example</title>
                <programlisting language="xml"><xi:include href="./samples/AtomFeedElementExample.xml" parse="text"/></programlisting>
            </example>
            <para>The following table describes each element in a feed.</para>
            <para>
                <table frame="border">
                    <caption>Feed elements</caption>
                    <col width="30%"/>
                    <col width="70%"/>
                    <thead>
                        <tr>
                            <th>Element</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>event</code></td>
                            <td>Generated by the publisher. This element contains information about
                                the event that is <emphasis role="italic">not</emphasis>
                                product-specific, such as the time and duration of the event and
                                where the event occurred.</td>
                        </tr>
                        <tr>
                            <td><code>feed</code></td>
                            <td>Generated by Cloud Feeds. This element is present only when the feed
                                engine is reading the feeds. This element includes information about
                                the feed, such as how to navigate to the next "page" of events.</td>
                        </tr>
                        <tr>
                            <td><code>product</code></td>
                            <td>Generated by the publisher. This element contains product-specific
                                information about the event, such as the server type, IP address,
                                and state.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
        </section>
            <section xml:id="Feed_Validation"><title>Feed validation</title><para>Cloud Feeds supports validation of a feed against a specified schema. You configure the
                validation settings when you add your feed to the allfeeds.wadl file. For more
                information, see <link linkend="Add_feed_to_wadl">Adding the feed to the
                    allfeeds.wadl file</link>.</para>
            <para>You can specify the following validation settings for a feed.</para>
            <para>
                <table frame="border">
                    <caption>Validation settings for a feed</caption>
                    <col width="20%"/>
                    <col width="70%"/>
                    <thead>
                        <tr>
                            <th>Validation setting</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>validated</td>
                            <td>This setting implies that the entire Atom entry is validated by
                                using an XML schema. If no XML schema exists for the
                                    <code>atom:content</code> node, the content is verified to be
                                well-formed XML.</td>
                        </tr>
                        <tr>
                            <td>product feed</td>
                            <td>This setting implies that a specific product schema is allowed for
                                this feed and used for validation, in addition to verification that
                                the feed content is valid XML. The content node only allows event
                                nodes that have a specific product schema associated with them. Only
                                the listed product schemas are allowed. For more information, see
                                    <link linkend="Define_product_schema">Defining your product
                                    schema</link>.</td>
                        </tr>
                    </tbody>
                </table>
            </para></section>   
    </chapter>
    <chapter xml:id="Element_of_an_atom_entry">
        <title>Event node</title>
        <para>The <emphasis role="italic">event node</emphasis> is the main element of a Cloud Feeds
            event entry.</para>
        <para>The event node contains the following elements:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>Event node attributes (predefined)</para>
                </listitem>
                <listitem>
                    <para>Product node</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>Following is an example of an event node.</para>
        <para>
            <example><title>Event node exqmple</title>
            <programlisting>&lt;event 
      <emphasis role="bold">startTime</emphasis>="2014-07-14T22:19:52Z"
      <emphasis role="bold">endTime</emphasis>="2014-07-14T24:00:00Z" 
      <emphasis role="bold">region</emphasis>="DFW" <emphasis role="bold">dataCenter</emphasis>="DFW1" <emphasis role="bold">type</emphasis>="USAGE"
      <emphasis role="bold">id</emphasis>="8d89673c-c989-11e1-895a-0b3d632a8a89"
      <emphasis role="bold">resourceId</emphasis>="3863d42a-ec9a-11e1-8e12-df8baa3ca440"
      <emphasis role="bold">tenantId</emphasis>="1234" <emphasis role="bold">version</emphasis>="2">
        &lt;cb-store:<emphasis role="bold">product version</emphasis>="1" <emphasis role="bold">serviceCode</emphasis>="CloudBackup"
           <emphasis role="bold">serverID</emphasis>="9445"
           <emphasis role="bold">storage</emphasis>="99992827882" <emphasis role="bold">resourceType</emphasis>="AGENT"/>
&lt;/event></programlisting>
            </example>
        </para>
        <section xml:id="Event_node">
            <title>Event node attributes<?sbr?></title>
            <para>The attributes in the event node are predefined and cannot be changed. The event
                node consists of the following attributes.</para>
            <para>
                <table frame="border">
                    <caption>Attributes in an event node</caption>
                    <col width="20%"/>
                    <col width="20%"/>
                    <col width="40%"/>
                    <col width="20%"/>
                    <thead>
                        <tr>
                            <th>Attributes</th>
                            <th>Type</th>
                            <th>Description</th>
                            <th>Condition</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>agentUsername</code></td>
                            <td>event:Username</td>
                            <td>Specifies the Rackspace agent who is taking action on behalf of the
                                user.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>clientUsername</code></td>
                            <td>event:Username</td>
                            <td>Specifies the user name for the sub-account, when applicable.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>dataCenter</code></td>
                            <td>event:DC</td>
                            <td> Specifies the data center of the event. If this attribute is not
                                specified, <emphasis role="bold">GLOBAL</emphasis> is assumed.
                                    <emphasis role="bold">GLOBAL</emphasis> implies that the
                                resource is without an assigned data center. For a list of possible
                                values, see <link linkend="Event_node_attributes"><emphasis
                                        role="bold">Attribute values for event
                                    node</emphasis></link>.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional for some event
                                            types.</para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute is required for events of type
                                                <emphasis role="bold">USAGE</emphasis>, <emphasis
                                                role="bold">USAGE_SUMMARY</emphasis>, and <emphasis
                                                role="bold">USAGE_SNAPSHOT</emphasis>. The value
                                            defined for <code>dataCenter</code> must match the value
                                            defined for <code>region</code>.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>endTime</code></td>
                            <td>event:UTCDateTime</td>
                            <td>Specifies the time that the event ends. The format must be ISO 8601
                                format: <emphasis role="italic">yyyy-mm-ddThh:mm:ss.SSSZ</emphasis>
                                (Z designates UTC). For an event of type <emphasis role="bold"
                                    >EXIST</emphasis>, the <code>startTime</code> and
                                    <code>endTime</code> reflect the event duration for the resource
                                instance. The end time is exclusive — that is, the event occurred up
                                to, but not during the specified value. The end time must occur
                                after the start time.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional. </para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute is required for events of type
                                                <emphasis role="bold">USAGE</emphasis>, but is
                                            optional for all other event types. </para>
                                    </listitem>
                                    <listitem>
                                        <para> The <code>startTime</code> attribute must also be
                                            specified.</para>
                                    </listitem>
                                    <listitem>
                                        <para> The event cannot span 24 hours.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>environment</code></td>
                            <td>event:ENVIRONMENT</td>
                            <td>Specifies the environment from which the message originated. If this
                                attribute is not specified, <emphasis role="bold">PROD</emphasis> is
                                assumed. For a list of possible values, see <link
                                    linkend="Event_node_attributes"><emphasis role="bold">Attribute
                                        values for event node</emphasis></link>.</td>
                            <td>This attribute is required for events of type <emphasis role="bold"
                                    >USAGE_SNAPSHOT</emphasis>, but is optional for all other event
                                types.</td>
                        </tr>
                        <tr>
                            <td><code>eventTime</code></td>
                            <td>event:UTCDateTime</td>
                            <td>Specifies the time of the event, using ISO 8601 format and UTC. Use
                                this attribute instead of <code>startTime</code> and
                                    <code>endTime</code> in cases where the event does not have a
                                range.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional. </para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute cannot coexist with the
                                                <code>startTime</code> or <code>endTime</code>
                                            attribute.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>id</code></td>
                            <td>event:UUID</td>
                            <td>Specifies the UUID for the event record. This value should be UUID
                                version 1, 2, or 4. For more information, see RFC 4122 at <link
                                    xlink:href="http://tools.ietf.org/html/rfc4122"
                                    >http://tools.ietf.org/html/rfc4122</link>. </td>
                            <td>This attribute is required.</td>
                        </tr>
                        <tr>
                            <td><code>referenceId</code></td>
                            <td>event:UUID</td>
                            <td>Specifies a GUID that identifies the event record that this record
                                is updating. This attribute should be used if this event is
                                correcting another event.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>region</code></td>
                            <td>event:Region</td>
                            <td>Specifies the region in which the event is located. If this
                                attribute is not specified, <emphasis role="bold">GLOBAL</emphasis>
                                is assumed. <emphasis role="bold">GLOBAL</emphasis> implies that the
                                resource is without an assigned region. For a list of possible
                                values, see <link linkend="Event_node_attributes"><emphasis
                                        role="bold">Attribute values for event
                                    node</emphasis></link>.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional for some event
                                            types.</para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute is required for events of type
                                                <emphasis role="bold">USAGE</emphasis>, <emphasis
                                                role="bold">USAGE_SUMMARY</emphasis>, and <emphasis
                                                role="bold">USAGE_SNAPSHOT</emphasis>. The value
                                            defined for <code>region</code> must match the value
                                            defined for <code>dataCenter</code>.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>resourceId</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the ID of the resource.</td>
                            <td>This attribute is required if the <code>resourceType</code>
                                attribute is specified in the product node, but is optional
                                otherwise.</td>
                        </tr>
                        <tr>
                            <td><code>resourceName</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the customer-defined name of the resource.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>resourceURI</code></td>
                            <td>xsd:anyURI</td>
                            <td>Specifies a URI that uniquely identifies the resource.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>rootAction</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the action that caused the event.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>severity</code></td>
                            <td>event:Severity</td>
                            <td>Specifies the severity of the event. Valid values are <emphasis
                                    role="bold">INFO</emphasis>, <emphasis role="bold"
                                    >WARNING</emphasis>, and <emphasis role="bold"
                                    >CRITICAL</emphasis>. This is attribute is valid only for system
                                events, not for usage events.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>startTime</code></td>
                            <td>event:UTCDateTime</td>
                            <td>Specifies the time that the event starts. The format must be ISO
                                8601 format:<emphasis role="italic">
                                    yyyy-mm-ddThh:mm:ss.SSSZ</emphasis> (Z designates UTC). The
                                start time is inclusive, which means that the event occurred
                                starting at the start time, not after.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is required for events of type
                                                <emphasis role="bold">USAGE</emphasis>, but is
                                            optional for all other event types. </para>
                                    </listitem>
                                    <listitem>
                                        <para> The <code>endTime</code> attribute must also be
                                            specified.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>tenantId</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the tenant ID of the publisher.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>type</code></td>
                            <td>event:EventType</td>
                            <td>Specifies the type of event. If one of the existing event types
                                fails to produce any feeds, set this attribute to <emphasis
                                    role="bold">EXTENDED</emphasis> and add an
                                    <code>eventType</code> attribute to your product schema. For
                                more information, see <link linkend="Event_types"><emphasis
                                        role="bold">Event types</emphasis></link>.</td>
                            <td>This attribute is required.</td>
                        </tr>
                        <tr>
                            <td><code>version</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the version of the event record.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is required. </para>
                                    </listitem>
                                    <listitem>
                                        <para>If this attribute is set to 2, the event cannot span
                                            beyond midnight as defined in the <code>startTime</code>
                                            and <code>endTime</code> attributes.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>
                <note>
                    <para>The <emphasis role="bold">event: prefix</emphasis> in the preceding table
                        denotes a specific namespace. For more information about namespaces, see
                            <link linkend="Selecting_namespace">Selecting a namespace</link>.
                            <emphasis role="bold">DC</emphasis> and <emphasis role="bold"
                            >Username</emphasis> denote type attributes that are defined in the
                            <emphasis role="bold">core.xsd</emphasis> schema file. <emphasis
                            role="bold">Core.xsd</emphasis> is posted on GitHub at: <link
                            xlink:href="https://github.com/rackerlabs/standard-usage-schemas/tree/master/core_xsd"
                            >https://github.com/rackerlabs/standard-usage-schemas/tree/master/core_xsd</link>.</para>
                </note>
            </para>
            <section xml:id="Event_node_attributes">
                <title>Attribute values for event node</title>
                <para>The following table lists the possible values for the <code>dataCenter</code>,
                        <code>environment</code>, and <code>region</code> attributes.</para>
                <para>
                    <table frame="border">
                        <caption>Attribute values</caption>
                        <col width="33%"/>
                        <col width="33%"/>
                        <col width="33%"/>
                        <thead>
                            <tr>
                                <th>dataCenter attribute</th>
                                <th>environment attribute</th>
                                <th>region attribute</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>GLOBAL</para>
                                        </listitem>
                                        <listitem>
                                            <para>DFW1</para>
                                        </listitem>
                                        <listitem>
                                            <para>DFW2</para>
                                        </listitem>
                                        <listitem>
                                            <para>DFW3</para>
                                        </listitem>
                                        <listitem>
                                            <para>HKG1</para>
                                        </listitem>
                                        <listitem>
                                            <para>IAD1</para>
                                        </listitem>
                                        <listitem>
                                            <para>IAD2</para>
                                        </listitem>
                                        <listitem>
                                            <para>IAD3</para>
                                        </listitem>
                                        <listitem>
                                            <para>LON1</para>
                                        </listitem>
                                        <listitem>
                                            <para>LON3</para>
                                        </listitem>
                                        <listitem>
                                            <para>ORD1</para>
                                        </listitem>
                                        <listitem>
                                            <para>SYD3</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>PROD</para>
                                        </listitem>
                                        <listitem>
                                            <para>PREPROD</para>
                                        </listitem>
                                        <listitem>
                                            <para>STAGE</para>
                                        </listitem>
                                        <listitem>
                                            <para>QA</para>
                                        </listitem>
                                        <listitem>
                                            <para>UAT</para>
                                        </listitem>
                                        <listitem>
                                            <para>LOCAL</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>GLOBAL</para>
                                        </listitem>
                                        <listitem>
                                            <para>DFW</para>
                                        </listitem>
                                        <listitem>
                                            <para>HKG</para>
                                        </listitem>
                                        <listitem>
                                            <para>IAD</para>
                                        </listitem>
                                        <listitem>
                                            <para>LON</para>
                                        </listitem>
                                        <listitem>
                                            <para>ORD</para>
                                        </listitem>
                                        <listitem>
                                            <para>SYD</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </para>
            </section>
            <section xml:id="Event_types">
                <title>Event types</title>
                <para>Cloud Feeds supports different event types that are specified in the event
                    node under the <code>type</code> attribute. Each event type has different
                    conditions and requirements.</para>
                <para>The following table describes the most important event types.</para>
                <para>
                    <table frame="border">
                        <caption>Event types</caption>
                        <col width="25%"/>
                        <col width="35%"/>
                        <col width="40%"/>
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Description</th>
                                <th>Requirements</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><emphasis role="bold">CREATE</emphasis></td>
                                <td>Specifies an event that creates a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">DELETE</emphasis></td>
                                <td>Specifies an event that deletes a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">DOWN</emphasis></td>
                                <td>Specifies an event that announces that a resource is down.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">EXTENDED</emphasis></td>
                                <td>Specifies a product-defined event type.</td>
                                <td>If the value of the <code>type</code> attribute is <emphasis
                                        role="bold">EXTENDED</emphasis>, the product attributes
                                    should contain an <code>eventType</code> attribute, which will
                                    contain the actual event type.</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">INFO</emphasis></td>
                                <td>Specifies an information event related to a specific
                                    resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">SUSPEND</emphasis></td>
                                <td>Specifies an event that suspends a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">UNSUSPEND</emphasis></td>
                                <td>Specifies an event that unsuspends a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">UP</emphasis></td>
                                <td>Specifies an event that announces that a resource is up.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">UPDATE</emphasis></td>
                                <td>Specifies an event that updates a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">USAGE</emphasis></td>
                                <td>Specifies a usage event. This is the default type value.</td>
                                <td>See <link linkend="USAGE_event_type_requirements"><emphasis
                                            role="bold">Requirements for USAGE event
                                        type</emphasis></link>.</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">USAGE_SNAPSHOT</emphasis></td>
                                <td>Specifies an instantaneous usage event.</td>
                                <td>See <link linkend="USAGE_SNAPSHOT_event_type_requirements"
                                            ><emphasis role="bold">Requirements for USAGE_SNAPSHOT
                                            event type</emphasis></link>.</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">USAGE_SUMMARY</emphasis></td>
                                <td>Automatically generated for any event of type <emphasis
                                        role="bold">USAGE</emphasis> and <emphasis role="bold"
                                        >USAGE_SNAPSHOT</emphasis>.</td>
                                <td>See <link linkend="USAGE_SUMMARY_event_type_requirements"
                                            ><emphasis role="bold">Requirements for USAGE_SUMMARY
                                            event type</emphasis></link>.</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <section xml:id="USAGE_event_type_requirements">
                    <title> Requirements for USAGE event type</title>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Must contain the <code>tenantId</code> attribute</para>
                            </listitem>
                            <listitem>
                                <para>Must have the <code>startTime</code> and <code>endTime</code>
                                    attributes defined</para>
                            </listitem>
                            <listitem>
                                <para>Cannot have a <code>severity</code> attribute defined</para>
                            </listitem>
                            <listitem>
                                <para>Must have the <code>region</code> and <code>dataCenter</code>
                                    attributes defined and both must match</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
                <section xml:id="USAGE_SNAPSHOT_event_type_requirements">
                    <title> Requirements for USAGE SNAPSHOT event type</title>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Must contain the <code>tenantId</code> attribute</para>
                            </listitem>
                            <listitem>
                                <para>Must have the <code>eventTime</code> attribute defined</para>
                            </listitem>
                            <listitem>
                                <para>Cannot have a <code>severity</code> attribute defined</para>
                            </listitem>
                            <listitem>
                                <para>Must have the <code>region</code> and <code>dataCenter</code>
                                    attributes defined and both must match</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
                <section xml:id="USAGE_SUMMARY_event_type_requirements">
                    <title> Requirements for USAGE SUMMARY event type</title>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Must contain the <code>tenantId</code> attribute</para>
                            </listitem>
                            <listitem>
                                <para>Cannot have a <code>severity</code> attribute defined</para>
                            </listitem>
                            <listitem>
                                <para>Must have the <code>region</code> and <code>dataCenter</code>
                                    attributes defined and both must match</para>
                            </listitem>
                            <listitem>
                                <para>The product node requires a summary attribute set to
                                    true</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
            </section>
        </section>
    </chapter>
    <chapter xml:id="Product_node">
        <title>Product node</title>
        <para>The product node is located inside of an event node. The product node is custom and
            differs for every product. It provides product-specific information and details about
            the resources. Product nodes are defined by using a product schema. </para>
        <para>Following is an example of a product node.</para>
        <para>
            <example><title>Product node example</title>
            <programlisting>&lt;sample:<emphasis role="bold">product</emphasis> serviceCode="EmailAppsMSService"
       version="1"
       key="(domain=5002_domain_2.com)|(service=5002_domain_2.com)"
       productType="lync"
       operation="UPDATE"
       status="COMPLETED"
       request="HTTP GET"
       response="200">
       &lt;sample:dependent 
          key="(domain=1002_domain_200.com)|(service=1002_domain_100.com)"/>
       &lt;sample:dependent 
          key="(domain=2002_domain_200.com)|(service=2002_domain_200.com)"/>
&lt;/sample:<emphasis role="bold">product</emphasis>></programlisting>
            </example>
        </para>
        <section xml:id="product_schema_node">
            <title>Product schema node</title>
            <para>The <emphasis role="italic">product schema</emphasis> is a proprietary, simplified
                schema format that defines the product node for an event by using XML. This schema
                enables someone to define a product event without knowing the XML Schema
                format.</para>
            <para>During the build process, the product schema file is transformed into an actual
                XML Schema file, which is then integrated with Cloud Feeds and validates events when
                they are posted.</para>
            <para>The product schema format has the following features:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> •  Product schemas can be versioned and multiple versions can
                            co-exist on a feed. This feature enables products to extend their
                            initial format. For more information, see <link linkend="Versions"
                                >Versioning</link>. </para>
                    </listitem>
                    <listitem>
                        <para>Product nodes can support attributes of several different types, such
                            as strings, dates, numeric types, and values in lists.</para>
                    </listitem>
                    <listitem>
                        <para>Product nodes can support attribute groups, which allows related
                            attributes to be collected into a single node. Several instances of an
                            attribute group may exist in a single product node, giving users the
                            ability to create maps of object types. For a list of allowed data
                            types, see <link linkend="Allowed_types">Allowed data
                            types</link>.</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>For more information on how to create the final product schema file, see <link
                    linkend="Define_product_schema"><emphasis role="bold">Definining your product
                        schema</emphasis></link>.</para>
            <para>The following table lists the attributes for the product schema node.</para>
            <para>
                <table frame="border">
                    <caption>Product schema node</caption>
                    <col width="20%"/>
                    <col width="20%"/>
                    <col width="30%"/>
                    <col width="30%"/>
                    <thead>
                        <tr>
                            <th>Attribute</th>
                            <th>Type</th>
                            <th>Description</th>
                            <th>Condition</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>aggregationPeriods</code></td>
                            <td>xsd:dayTimeDuration</td>
                            <td>Specifies a duration of one of the aggregation periods.  </td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is required for events of type
                                                <emphasis role="bold">USAGE</emphasis>.</para>
                                    </listitem>
                                    <listitem>
                                        <para>The list of time periods specified in
                                                <code>aggregationPeriods</code> must sum to exactly
                                            24 hours.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>groupByResource</code></td>
                            <td>xsd:boolean</td>
                            <td>If this attribute is set to true, the attributes are grouped by the
                                resource ID. This group implies that the product is being charged
                                per resource. If this attribute is set to false, attributes are
                                grouped by the tenant ID. This attribute is set to true by
                                default.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional.</para>
                                    </listitem>
                                    <listitem>
                                        <para>If this attribute is set to true, the
                                                <code>resourceTypes</code> attribute must be
                                            defined. </para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>namespace</code></td>
                            <td>xsd:anyURI</td>
                            <td>Specifies the namespace for the schema. The namespace must be unique
                                for each product. The same namespace can be used between product
                                schema versions. For more information, see <link
                                    linkend="Selecting_namespace"><emphasis role="bold">Selecting a
                                        namespace</emphasis></link>.</td>
                            <td>This attribute is required.</td>
                        </tr>
                        <tr>
                            <td><code>RANEnrichmentStrategy</code></td>
                            <td>Boolean</td>
                            <td>The RANEnrichmentStrategy by which the tenant ID is mapped to a
                                Rackspace Account Number (RAN)</td>
                            <td>This attribute is required for all events of type <emphasis
                                    role="bold">USAGE</emphasis>.</td>
                        </tr>
                        <tr>
                            <td><code>resourceTypes</code></td>
                            <td>schema:NameList</td>
                            <td>Contains a whitespace-separated list of the resource types defined
                                in the product schema (for example, <emphasis role="bold"
                                    >SITES_EMAIL</emphasis>). A product schema must specify at least
                                one resource type if the <code>groupByResource</code> attribute is
                                set to true. </td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>serviceCode</code></td>
                            <td>xsd:Name</td>
                            <td>Specifies the name that uniquely identifies the product or service.
                                The value must be a single word; no whitespaces are allowed. The
                                name is used to construct Atom categories for events of this
                                type—for example, <emphasis role="italic"
                                    >EmailAppsMSService</emphasis>.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is required.</para>
                                    </listitem>
                                    <listitem>
                                        <para>Each product schema must define a service code
                                            attribute that uniquely identifies the product.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>type</code></td>
                            <td>usage:TypeList</td>
                            <td>Specifies the types of messages that are applicable to this schema,
                                for example, <emphasis role="bold">USAGE_SUMMARY</emphasis>. The
                                default value is <emphasis role="bold">USAGE</emphasis>.</td>
                            <td>
                                <itemizedlist linkend="Event_types">
                                    <listitem>
                                        <para>This attribute is optional.</para>
                                    </listitem>
                                    <listitem>
                                        <para>For more information, see <link linkend="Event_types"
                                                >Event types</link>.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>version</code></td>
                            <td>xsd:string</td>
                            <td>Specifies the version of this particular product schema. Any sort of
                                version string is allowed. Each product schema must have a unique
                                version.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>xlmns</code></td>
                            <td>xsd:string</td>
                            <td>Specifies the URL for your feed.</td>
                            <td>This attribute is required.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>When the product schema runs through the internal build process, a product XSD
                file is generated. The product schema consists of zero or more attributes and zero
                or more attribute groups, each of which can contain custom attributes.</para>
            <para>The following example shows a sample product schema with multiple attributes and
                an attribute group defined.</para>
            <programlisting language="xml"><xi:include href="./samples/emailapps_msservice.xml" parse="text"/></programlisting>
            <section xml:id="Attribute_node">
                <title>Attribute node</title>
                <para>The attribute node declares an attribute for a product., such as the name of
                    the product. Attributes are defined in the product schema. The attribute node is
                    a child of the product node. </para>
                <para>The XML attributes of the attribute element can consist of different data
                    types, such as strings or integers. Product attributes can vary in their
                    definitions, but they usually contain the XML attributes described in the
                    following table.</para>
                <para>
                    <table frame="border">
                        <caption>Common XML attributes for the attribute node</caption>
                        <col width="20%"/>
                        <col width="20%"/>
                        <col width="31%"/>
                        <col width="29%"/>
                        <thead>
                            <tr>
                                <th>Attribute</th>
                                <th>Type</th>
                                <th>Description</th>
                                <th>Condition</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>allowedValues</code></td>
                                <td>schema:TokenList</td>
                                <td>Specifies an optional whitespace-separated list of allowed
                                    values.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>default</code></td>
                                <td>xsd:string</td>
                                <td>Specifies the default value of the attribute, if it has a
                                    default value. Only optional attributes can have default
                                    values.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>displayName</code></td>
                                <td>xsd:string</td>
                                <td>Specifies the human-readable name for the attribute that can be
                                    used for reports, invoices, and so on. The display name does not
                                    have the same constraints as the <code>name</code> attribute.
                                    This attribute can contain spaces. If this optional attribute is
                                    not specified, the <code>name</code> attribute is used in
                                    reports, invoices, and so on.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>fixed</code></td>
                                <td>xsd:string</td>
                                <td>Specifies the fixed value of the attribute, if it has a fixed
                                    value.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>max</code></td>
                                <td>schema:MinMaxType</td>
                                <td>Specifies the minimum value allowed in the numeric type. The
                                    value is inclusive.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for numeric types only.</para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>min</code></td>
                                <td>schema:MinMaxType</td>
                                <td>Specifies the minimum value allowed in the numeric type. The
                                    value is inclusive.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for numeric types only.</para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>maxLength</code></td>
                                <td>xsd:integer</td>
                                <td>Specifies the maximum length of a string. <emphasis role="bold"
                                            ><emphasis role="italic">Note</emphasis></emphasis>: if
                                        <code>minLength</code> is not set, it defaults to 0, which
                                    implies that empty strings are valid. If empty strings are not
                                    valid, ensure that <code>minLength</code> is set to a value of
                                    greater than 0.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for string types only. </para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>minLength</code></td>
                                <td>xsd:integer</td>
                                <td>Specifies the minimum length of a string. <emphasis role="bold"
                                            ><emphasis role="italic">Note</emphasis></emphasis>: if
                                        <code>minLength</code> is not set, it defaults to 0, which
                                    implies that empty strings are valid. If empty strings are not
                                    valid, ensure that <code>minLength</code> is set to a value of
                                    greater than 0.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for string types only. </para>
                                        </listitem>
                                        <listitem>
                                            <para>If this attribute is defined, the
                                                  <code>maxLength</code> attribute is also
                                                required.</para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute defaults to 0.</para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>name</code></td>
                                <td>string</td>
                                <td>Specifies the name of the attribute. This value cannot have
                                    spaces.</td>
                                <td>This attribute is required.</td>
                            </tr>
                            <tr>
                                <td><code>private</code></td>
                                <td>Boolean</td>
                                <td>If this attribute is set to true, then the attribute value is
                                    not shown to the public. The default value is false.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>searchable</code></td>
                                <td>Boolean</td>
                                <td>If this attribute is set to true, then a category  generated for
                                    every event based on this attribute's value. The default value
                                    is false.</td>
                                <td>This attribute is optional. </td>
                            </tr>
                            <tr>
                                <td><code>type</code></td>
                                <td>schema:TypeList</td>
                                <td>Specifies the data types that are applicable to this attribute —
                                    for example <code>string</code> or <code>unsignedInt</code>.
                                    For more information, see <link linkend="Allowed_types"
                                            ><emphasis role="bold">Allowed data
                                        types</emphasis></link>.</td>
                                <td>This attribute is required.</td>
                            </tr>
                            <tr>
                                <td><code>use</code></td>
                                <td>schema:Use</td>
                                <td>Specifies whether the <code>product</code> attribute is
                                        <emphasis role="bold">optional</emphasis>, <emphasis
                                        role="bold">required</emphasis>, or <emphasis role="bold"
                                        >synthesized</emphasis>. </td>
                                <td>This attribute is optional, but if it is not specified, the
                                        <code>product</code> attribute is labeled as optional.</td>
                            </tr>
                            <tr>
                                <td><code>withEventType</code></td>
                                <td>usage:TypeList</td>
                                <td>This attribute is valid only with events of the following types:
                                        <emphasis role="bold">USAGE</emphasis>, <emphasis
                                        role="bold">CREATE</emphasis>, <emphasis role="bold"
                                        >DELETE</emphasis>. Currently, extended event types are not
                                    supported. This attribute should reference a type from the
                                        <code>type</code> attribute.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is optional. </para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute cannot have the value <emphasis
                                                  role="bold">EXTENDED</emphasis>. </para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>withResource</code></td>
                                <td>schema:NameList</td>
                                <td>The attribute is valid only with events that reference the type
                                    of resource specified. This is a whitespace-separated list. The
                                    items on this list must be referenced in the
                                        <code>resourceType</code> attribute in the product
                                    node.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <para>Following is an example of an attribute for a product schema.</para>
                <example><title>Attribute example</title>
                    <programlisting>&lt;<emphasis role="bold">attribute</emphasis>
    name="key"
    type="string"
    minLength="1"
    maxLength="1024"
    use="required">
    Specifies the key of the object that this event corresponds to.
&lt;/<emphasis role="bold">attribute</emphasis>>                                        </programlisting></example>
            </section>
            <section xml:id="Attribute_group">
                <title>Attribute group<?sbr?></title>
                <para>A product schema can contain zero or more attribute groups. An attribute group
                    collects related attributes in a single node. Several instances of an attribute
                    group can exist in a single product node, giving users the ability to create
                    maps of object types. An attribute group can contain up to 50 attributes.</para>
                <para>The following table lists the XML attributes that can be set in an attribute
                    group.</para>
                <para>
                    <table frame="border">
                        <caption>XML attributes for the attribute group</caption>
                        <col width="20%"/>
                        <col width="20%"/>
                        <col width="35%"/>
                        <col width="25%"/>
                        <thead>
                            <tr>
                                <th>Attribute</th>
                                <th>Type</th>
                                <th>Description</th>
                                <th>Condition</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>description</code></td>
                                <td>string</td>
                                <td>Describes the attribute group.</td>
                                <td>This attribute is required.</td>
                            </tr>
                            <tr>
                                <td><code>maxOccurs</code></td>
                                <td>schema:MaxOccurs</td>
                                <td>Specifies the maximum occurrence of the attribute group. The
                                    default value is 1.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>minOccurs</code></td>
                                <td>schema:MinOccurs</td>
                                <td>Specifies the minimum occurrence of the attribute group. The
                                    default value is 1.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>name</code></td>
                                <td>xsd: Name</td>
                                <td>Specifies the name of the attribute group.</td>
                                <td>This attribute is required.</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <para>Following is an example of a product schema that contains an attribute
                    group.</para>
                <para>
                    <example><title>Attribute group within product schema example</title>
                    <programlisting>&lt;productSchema xmlns="http://docs.rackspace.com/core/usage/schema"
               namespace="http://docs.rackspace.com/event/emailapps_msservice"
               version="1"
               serviceCode="EmailAppsMSService" type="INFO"
               >
    &lt;description>
        Specifies events for the Email and Apps Microsoft Service.
    &lt;/description>
    &lt;attribute name="key" type="string" minLength="1" maxLength="1024" use="required">
        Specifies the key of the object that this event corresponds to.
    &lt;/attribute>
    &lt;attribute name="productType" type="string" use="required">
        Specifies the MS Service product that this event corresponds to.
    &lt;/attribute>
    &lt;attribute name="operation" type="string" use="required">
        Specifies the operation that is performed on the resource that this event corresponds to.
    &lt;/attribute>
    &lt;attribute name="status" type="Name" allowedValues="COMPLETED ERROR" use="required">
        Specifies the status of the operation that is performed on the resource that this event corresponds to.
    &lt;/attribute>
    &lt;attribute name="request" type="string" minLength="1" maxLength="20000" use="required">
        Specifies the request that this event corresponds to.
    &lt;/attribute>
    &lt;attribute name="response" type="string" minLength="1" maxLength="20000" use="optional">
        Specifies the response for the above request.
    &lt;/attribute>
    &lt;<emphasis role="bold">attributeGroup </emphasis>name="dependent" minOccurs="0" maxOccurs="unbounded">
        &lt;description>
            Specifies the list of all dependent objects for an event. For example, in mailbox-related events, since the mailbox
            has to be under a domain, a domain object can be listed as one of the dependents.
        &lt;/description>
        &lt;attribute name="key" type="string" minLength="1" maxLength="1024" use="required">
            Specifies the key of the dependent objects.
        &lt;/attribute>
    &lt;/<emphasis role="bold">attributeGroup</emphasis>>
&lt;/productSchema></programlisting></example>
                </para>
            </section>
            <section xml:id="x_path_assertion">
                <title>XPath assertion node<?sbr?><?sbr?></title>
                <para>XPath assertion nodes enable you to add further checks to your event by using
                    xPath assertions. </para>
                <para>While the basic <code>attribute</code> and <code>attributeGroup</code> schema
                    definitions enable you to define most product events, you can create additional
                    custom rules by using XPath assertions and the XPath language. For example,
                    there might be a case when the <code>serverID</code> attribute of a product node
                    is required only when the <code>external</code> condition evaluates to <emphasis
                        role="bold">true</emphasis>. This case cannot be enumerated with the basic
                    schema format, but it can be verified with an assertion, as shown in the
                    following example.</para>
                <para>
                    <example><title>XPath Assertion example</title>
                    <programlisting>&lt;<emphasis role="bold">xpathAssertion</emphasis> test="if (not(xsd:boolean(@external))) then @serverID else true()">
    <emphasis role="italic">If the server is NOT external, then the serverID attribute is required.</emphasis>
&lt;/<emphasis role="bold">xpathAssertion</emphasis>></programlisting></example>
                </para>
                <para>This assertion fails if the <code>external</code> value evaluates to <emphasis
                        role="bold">false</emphasis> and the <code>serverID</code> attribute does
                    not exist. If both conditions are met, the assertion passes.</para>
                <para>For more information about XPath, see <link
                        xlink:href="http://en.wikipedia.org/wiki/XPath"
                        >http://en.wikipedia.org/wiki/XPath</link>. </para>
                <para>The XPath context is the <code>product</code> element by default. You can
                    change the context of the root of the entry by setting the <code>scope</code>
                    attribute. </para>
                <para>The following table describes the attributes that you can define for an XPath
                    assertion.</para>
                <table frame="border">
                    <caption>XPath assertion attributes</caption>
                    <col width="20%"/>
                    <col width="20%"/>
                    <col width="30%"/>
                    <col width="30%"/>
                    <thead>
                        <tr>
                            <th>Attribute</th>
                            <th>Type</th>
                            <th>Description</th>
                            <th>Condition</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>scope</code></td>
                            <td>schema:XPathScope</td>
                            <td>Specifies the scope of an XPath assertion. The scope determines the
                                context of the XPath assertion. The value can be either <emphasis
                                    role="bold">product</emphasis> or <emphasis role="bold"
                                    >entry</emphasis>. The default value for this attribute is
                                    <emphasis role="bold">product</emphasis>.</td>
                            <td>When the value is <emphasis role="bold">entry</emphasis>, the
                                variables <code>$entry</code>, <code>$event</code>, and
                                    <code>$product</code> are defined, each pointing to the
                                respective part of the message. </td>
                        </tr>
                        <tr>
                            <td><code>test</code></td>
                            <td>xsd:string</td>
                            <td>Specifies the XPath test.</td>
                            <td>This attribute is required.</td>
                        </tr>
                    </tbody>
                </table>
            </section>
            <section xml:id="Versions">
                <title>Versioning</title>
                <para>The event and product nodes are version-controlled. Cloud Feeds can support
                    events that contain different definitions for the event and product nodes
                    simultaneously. This flexibility enables publishers to define a new event
                    without breaking older events that have not yet adopted the new definition. The
                    event and product versions are independent of each other.</para>
                <para>For example, if you specify <code>&lt;event version="2"></code>, Cloud Feeds
                    applies different rules to the <code>startTime</code> and <code>endTime</code>
                    attributes than if you specify <code>&lt;event version="1"></code>. </para>
                <para>You can define multiple versions for a specific product within a schema, as
                    shown in the following example.</para>
                <example>
                    <title>Product versioning example</title>
                    <programlisting language="xml"><xi:include href="./samples/BigDataVersioningExample.xml" parse="text"/></programlisting>
                </example>
                <para>
                    <note>
                        <para>You can only update the version of an event if it is <emphasis
                                role="bold">backwards compatible</emphasis>. If you want to update
                            an event that is <emphasis role="bold">backwards
                            incompatible</emphasis>, you need to create a <emphasis role="bold"
                                >new</emphasis> event. The purpose of the version number is to
                            denote which schema rules should apply, and <emphasis role="bold">not
                            </emphasis>to denote that a message is <emphasis role="bold"
                                >incompatible</emphasis>.</para>
                    </note>
                </para>
            </section>
        <section xml:id="Allowed_types">
            <title>Allowed data types</title>
            <para>The following table provides a list of allowed data types for product schema
                definitions.</para>
            <para>
                <table frame="border">
                    <caption>Allowed data types</caption>
                    <col width="25%"/>
                    <col width="75%"/>
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>anyURI</code></td>
                            <td>Specifies a Uniform Resource Identifier. This includes not only
                                Uniform Resource Locators (URLs), but also Uniform Resource Names
                                (URNs). Both relative and absolute URLs are allowed.</td>
                        </tr>
                        <tr>
                            <td><code>anyURI</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>anyURI</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>base64Binary</code></td>
                            <td>Specifies an arbitrary sequence of bytes that has been encoded in
                                ASCII characters using the Base-64 algorithm defined in <link
                                    xlink:href="https://www.ietf.org/rfc/rfc2045.txt">RFC
                                    2045</link>. The letters A–Z and a–z, the digits 0–9, and the
                                punctuation marks + and / are used to encode data according to an
                                algorithm that maps four of these characters to three arbitrary
                                bytes. The equal sign is used to pad data at the end if
                                necessary.</td>
                        </tr>
                        <tr>
                            <td><code>boolean</code></td>
                            <td>Specifies a Boolean value.</td>
                        </tr>
                        <tr>
                            <td><code>boolean</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>boolean</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>byte</code></td>
                            <td>Specifies a signed integer that can be represented by a single byte.
                                    The minimum value of a byte is -128, and the maximum value is
                                    127.</td>
                        </tr>
                        <tr>
                            <td><code>byte</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>byte</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>date</code></td>
                            <td>The <code>date</code> type represents a specific day in history such
                                as September 26, 2005. Dates are written in the form <emphasis
                                    role="italic">CCYY-MM-DD</emphasis>. For example, September 26,
                                2005 is written as 2005-09-26.</td>
                        </tr>
                        <tr>
                            <td><code>date</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>date</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>dateTime</code></td>
                            <td>Specifies a specific moment in history, such as 3:32 p.m., September
                                    26, 2003. An optional time zone indicator in the form ±<emphasis
                                        role="italic">hh:mm</emphasis> can be suffixed to provide a
                                    time. For example, 2003-09-26T15:32:00-05:00 is 3:32 p.m.,
                                    September 26, 2003 in the U.S. Eastern time zone.</td>
                        </tr>
                        <tr>
                            <td><code>dateTime</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>dateTime</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>double</code></td>
                            <td>Specifies a decimal value that can be represented by an eight-byte
                                floating-point number in IEEE 754 format. Values such as INF
                                (infinity) and NaN (not a number) are allowed.</td>
                        </tr>
                        <tr>
                            <td><code>double</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>double</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>duration</code></td>
                            <td>Specifies a length of time, such as 15 minutes; 2 hours; or 3 years,
                                    7 months, 2 days, 8 hours, 32 minutes, and 12 seconds. This
                                    value does not have a specific beginning or end. For more
                                    information, see the note following the table. </td>
                        </tr>
                        <tr>
                            <td><code>duration</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>duration</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>float</code></td>
                            <td>Specifies a decimal value that can be represented by a four-byte
                                floating-point number in IEEE 754 format. Values such as INF
                                (infinity) and NaN (not a number) are allowed.</td>
                        </tr>
                        <tr>
                            <td><code>float</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>float</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gDay</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gDay</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gMonth</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gMonth</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gYear</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gYear</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gMonthDay</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gMonthDay</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gMonthYear</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gMonthYear</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>int</code></td>
                            <td>Specifies a signed integer that can be represented by four bytes.
                                    The minimum value of <code>int</code> is -2147483648, and the
                                    maximum value is 2147483647.</td>
                        </tr>
                        <tr>
                            <td><code>int</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>int</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>integer</code></td>
                            <td>Specifies an integer value of arbitrary size.</td>
                        </tr>
                        <tr>
                            <td><code>integer</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>integer</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>long</code></td>
                            <td>Specifies a signed integer that can be represented by eight bytes.
                                    The minimum value of <code>long</code> is 9223372036854775807,
                                    and the maximum value is -9223372036854775808.</td>
                        </tr>
                        <tr>
                            <td><code>long</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>long</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>Name</code></td>
                            <td>Specifies a valid name. This name must be a string that consists
                                    exclusively of letters, digits, ideographs, underscores,
                                    hyphens, periods, and colons. Digits, hyphens, and periods may
                                    not be used to start a name, although they can be used inside
                                    the name.</td>
                        </tr>
                        <tr>
                            <td><code>Name</code>*</td>
                            <td>Specifies a list of <code>Name</code> values.</td>
                        </tr>
                        <tr>
                            <td><code>short</code></td>
                            <td>Specifies a signed integer that can be represented by two bytes. The
                                minimum value of a <code>short</code> is -32768, the maximum value
                                is 32767.</td>
                        </tr>
                        <tr>
                            <td><code>short</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>short</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>string</code></td>
                            <td>Specifies any sequence of characters.</td>
                        </tr>
                        <tr>
                            <td><code>string</code>*</td>
                            <td>Specifies a list of <code>string</code> values.</td>
                        </tr>
                        <tr>
                            <td><code>time</code></td>
                            <td>Specifies a specific time of day on no particular day, such as 3:32
                                    p.m. Times are written in the form ±<emphasis role="italic"
                                        >hh:mm:ss.xxx</emphasis> using a 24-hour clock and as many
                                    fractions of a second as necessary. An optional time zone
                                    indicator in the form ±<emphasis role="italic">hh:mm</emphasis>
                                    may be suffixed to provide a time zone as an offset from
                                    Coordinated Universal Time (UTC). For example, 15:32:00-05:00 is
                                    3:32 p.m., in the U.S. Eastern time zone. A <emphasis
                                        role="bold">Z</emphasis> can be used instead to indicate
                                    UTC: 00:00:00Z.</td>
                        </tr>
                        <tr>
                            <td><code>time</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>time</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedByte</code></td>
                            <td>Specifies an unsigned integer that can be represented by a single
                                    byte. The minimum value of <code>unsignedByte</code> is 0, and
                                    the maximum value is 255.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedByte</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>unsignedByte</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedInt</code></td>
                            <td>Specifies an unsigned integer that can be represented by four bytes.
                                    The minimum value of <code>unsignedInt</code> is 0, and the
                                    maximum value is 4294967295.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedInt</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>unsignedInt</code>
                                    values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedLong</code></td>
                            <td>Specifies an unsigned integer that can be represented by eight
                                    bytes. The minimum value of <code>unsignedLong</code> is 0, and
                                    the maximum value is 18446744073709551615.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedLong</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>unsignedLong</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedShort</code></td>
                            <td>Specifies an unsigned integer that can be represented by two bytes.
                                    The minimum value of <code>unsignedShort</code> is 0, and the
                                    maximum value is 65535.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedShort</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>unsignedShort</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>utcDateTime</code></td>
                            <td>Specifies a <code>dateTime</code> constraint to be in the UTC time
                                zone. That is the time zone offset must be 0 or the value must end
                                with Z.</td>
                        </tr>
                        <tr>
                            <td><code>utcDateTime</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>utcDateTime</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>utcTime</code></td>
                            <td>Specifies a time constraint for the UTC time zone. The time zone
                                offset must be 0 or the value must end with Z.</td>
                        </tr>
                        <tr>
                            <td><code>utcTime</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>utcTime</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>UUID</code></td>
                            <td>Specifies a universally unique identifier in its canonical form: 32
                                hexadecimal digits, displayed in five groups separated by hyphens,
                                in the form 8-4-4-4-12 for a total of 36 characters (32 digits and
                                four hyphens). For example,
                                7eadda6a-9f3e-11e1-9ef4-77b6922f8866.</td>
                        </tr>
                        <tr>
                            <td><code>UUID</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>UUID</code>
                                values.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>
                <note>
                    <para>Durations are represented by using the ISO-8601 standard format P<emphasis
                                role="italic">n</emphasis>Y<emphasis role="italic"
                                >n</emphasis>M<emphasis role="italic">n</emphasis>DT<emphasis
                                role="italic">n</emphasis>H<emphasis role="italic"
                                >n</emphasis>M<emphasis role="italic">n</emphasis>S:</para>
                        <para><itemizedlist>
                                <listitem>
                                    <para>
                                        <emphasis role="italic">n</emphasis>Y specifies the number
                                        of years.</para>
                                </listitem>
                                <listitem>
                                    <para><emphasis role="italic">n</emphasis>M specifies the number
                                        of months.</para>
                                </listitem>
                                <listitem>
                                    <para><emphasis role="italic">n</emphasis>D specifies the number
                                        of days.</para>
                                </listitem>
                                <listitem>
                                    <para><emphasis role="italic">n</emphasis>H specifies the number
                                        of hours.</para>
                                </listitem>
                                <listitem>
                                    <para><emphasis role="italic">n</emphasis>M specifies the number
                                        of minutes.</para>
                                </listitem>
                                <listitem>
                                    <para><emphasis role="italic">n</emphasis>S specifies the number
                                        of seconds. </para>
                                </listitem>
                            </itemizedlist>The number of years, months, days, hours, minutes, and
                            seconds are specified as nonnegative integers. The number of seconds is
                            a decimal number with as many places after the decimal point as
                            necessary. For example, in this format, 3 years, 7 months, 2 days, 8
                            hours, 32 minutes, and 12 seconds is written as P3Y7M2DT8H32M12S. Any
                            values that are zero can be omitted. A duration of 2 years and 2 minutes
                            can be written as P2YT2M. If there are no hours, minutes, or seconds,
                            then the T is omitted. A duration of two years is written as P2Y. A
                            leading minus sign before the P indicates a negative duration.</para>
                </note>
            </para>
        </section>
        </section>
    </chapter>
    <chapter xml:id="Using_Cloud_Feeds">
        <title>Preparing a feed for publication through Cloud Feeds</title>
        <para>To define a new event, you need to submit a pull request on the <link
                xlink:href="https://github.com/rackerlabs/standard-usage-schemas"
                >https://github.com/rackerlabs/standard-usage-schemas</link> repository. </para>
        <para>To submit this pull request, you first need to complete the following steps:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para><link linkend="Define_product_schema">Define your product schema</link>. </para>
                </listitem>
                <listitem>
                    <para><link linkend="Generate_schema_and_WADLs">Generate schemas and
                            WADLs</link>.</para>
                </listitem>
                <listitem>
                    <para><link linkend="Add_feed_to_wadl">Add your feed to the <emphasis
                                role="bold">allfeeds.wadl</emphasis> file</link>.</para>
                </listitem>
                <listitem>
                    <para><link linkend="Add_sample_files">Add message samples</link>.</para>
                </listitem>
                <listitem>
                    <para><link linkend="Add_feed_to_the_document">Add your feed to be included in
                            the documentation</link>.</para>
                </listitem>
                <listitem>
                    <para><link linkend="Test_your_feed">Test your feed</link>.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <note>
                <para>These steps assume that you have already set up a repository for Cloud Feeds
                    in GitHub.</para>
            </note>
        </para>
        <para>
            <important>
                <para>The standard-usage-schema build requires that you have Java 1.7 and <link
                        xlink:href="http://maven.apache.org/download.cgi">Maven 3.0.5</link>
                    installed on your computer.</para>
            </important>
        </para>
        <section xml:id="Define_product_schema">
            <title>Defining your product schema</title>
            <para>After you have forked the repository and created a branch, you need to create a
                new XML file to define the product-specific schema.</para>
            <para>Create a new file by using the <emphasis role="bold"
                        >sample_product_schemas/<emphasis role="italic"
                    >newProductName</emphasis>.xml</emphasis> naming convention, for example
                    <emphasis role="italic">sample_product_schemas/nova.xml</emphasis>. </para>
            <para>To define your product schema, complete the following steps:</para>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Read the <link linkend="Product_node"><emphasis role="bold">Product
                                    node</emphasis></link> section.</para>
                    </listitem>
                    <listitem>
                        <para>Define the productSchema node.</para>
                    </listitem>
                    <listitem>
                        <para>Define the <code>description</code> node.</para>
                    </listitem>
                    <listitem>
                        <para>Add the attributes and attribute groups for your product.</para>
                    </listitem>
                </orderedlist>
            </para>
            <section xml:id="defining_product_schema_node"><title>Defining the product schema node</title>
   
            <para>When you create your product schema, you first need to define the product schema
                    node. Defining the product schema node requires that you <link
                        linkend="Selecting_namespace">select a namespace for your
                    product</link>.</para>
                <para>For a list of the attributes that are part of the product schema node, see
                        <link linkend="product_schema_node">Product schema node</link>.</para>
                <para>Following is an example of a product schema node: <example>
                        <title>Product schema node example</title>
                        <programlisting>&lt;<emphasis role="bold">productSchema</emphasis> xmlns="http://docs.rackspace.com/core/usage/schema"
               namespace="http://docs.rackspace.com/event/ebs/bu-team"
               serviceCode="EBS"
               type="CREATE UPDATE DELETE"
               version="1"></programlisting>
                    </example></para>
            <para> </para>
        <section xml:id="Selecting_namespace">
            <title>Selecting a namespace</title>
            <para>When you specify the product schema node, you need to define an appropriate
                            <code>namespace</code> attribute for your product. </para>
            <para>For <emphasis role="bold">usage</emphasis> events, use the following convention
                        for namespaces:</para>
            <programlisting>http://docs.rackspace.com/usage/<emphasis role="italic">product</emphasis>/<emphasis role="italic">resource</emphasis>    </programlisting>
            <para>Following are examples of namespaces for usage events:</para>
                <programlisting>http://docs.rackspace.com/usage/sites/subscription</programlisting>
<programlisting>http://docs.rackspace.com/usage/cloudbackup/storage</programlisting>
            <para>For <emphasis role="bold">system</emphasis> events, the convention of the
                        namespace is as follows:</para>
            <programlisting>http://docs.rackspace.com/event/<emphasis role="italic">product</emphasis>/<emphasis role="italic">resource</emphasis>   </programlisting>
            <para>Following is an example of a namespace for a system event:</para>
                <programlisting>http://docs.rackspace.com/event/lbaas/node</programlisting></section></section>
            <section xml:id="Adding_a_description"><title>Defining the description node </title>
            <para>After you have defined the product schema node, you need to add a description
                    node. In the description node, you need to include a brief description of what
                    kind of information is included in the event.</para>
                <para>Following is an example of a description
                    node.
                    <example><title>Description node example</title><programlisting><emphasis role="bold">&lt;description></emphasis>
        Specifies the team mapping to the business unit.
<emphasis role="bold">&lt;/description></emphasis></programlisting></example></para>
            </section>
        <section xml:id="Defining_attributes_and_attribute_groups"><title>Defining the attributes and attribute groups</title><para>After you have defined the product schema and description nodes, you need to add the
                    appropriate attibute and attribute group nodes for your product. For more
                    information about attributes an attribute groups, see <link
                        linkend="Attribute_group"><emphasis role="bold">Attribute
                        node</emphasis></link> and <link linkend="Attribute_group"><emphasis
                            role="bold">Attribute group</emphasis></link>.</para>
                <para>Following is an example of a completed product schema file:</para>
                <para>
                    <example><title>Completed product schema file example</title>
                    <programlisting>&lt;productSchema xmlns="http://docs.rackspace.com/core/usage/schema"
               namespace="http://docs.rackspace.com/event/ebs/bu-team"
               serviceCode="EBS"
               type="CREATE UPDATE DELETE"
               version="1">
    &lt;description>
        Specifies the team mapping to the business unit.
    &lt;/description>
    &lt;attribute name="businessUnit" type="string" use="required"
         maxLength="150">
        Specifies the business unit name.
    &lt;/attribute>

    &lt;attribute name="description" type="string" use="required" 
        maxLength="255">
        Specifies the description of the event.
    &lt;/attribute>
    &lt;attributeGroup name="team" minOccurs="0" maxOccurs="unbounded">
        &lt;description>
            Specifies the team name and number which belongs to
        the listed business number.
        &lt;/description>
        &lt;attribute name="name" type="string" use="required" 
        maxLength="255">
            Specifes the team name.
        &lt;/attribute>
        &lt;attribute name="number" type="string" use="required"
       maxLength="150">
            Specifies the team number.
        &lt;/attribute>
    &lt;/attributeGroup>
&lt;/productSchema></programlisting></example>
                </para></section></section>
        <section xml:id="Generate_schema_and_WADLs">
            <title>Generating schemas and WADL files</title>
            <para>After you have created the sample product schema, you need to perform a build to
                generate the schemas and WADL files.</para>
            <para>
                <important>
                    <para>To perform a build to generate the schemas and WADL files, you need to
                        obtain a Saxon license and install it on your computer. You can obtain a
                        Saxon license by contacting the Cloud Feeds team at
                        cloudfeeds@Rackspace.com.</para>
                </important>
            </para>
            <para>The following items are generated during a build process.</para>
            <para>
                <table frame="border">
                    <caption>Files that are generated during build</caption>
                    <col width="43%"/>
                    <col width="57%"/>
                    <thead>
                        <tr>
                            <th>Generated file</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><emphasis role="bold">generated_product_xsds/*.xsd</emphasis></td>
                            <td>This file is generated from sample product schemas.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">core_xsd/usage.xsd</emphasis></td>
                            <td>This file enumerates all product xsd files that are generated.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">wadl/product.wadl</emphasis></td>
                            <td>This file contains the WADL resources for all generated product
                                schemas.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>To generate the necessary schema and WADL files, complete the following
                steps:</para>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Create a folder for the Saxon license that is named <emphasis
                                role="italic">saxon-license</emphasis> on the home directory of your
                            computer:</para>
                        <para>
                            <programlisting>mkdir ~/saxon-license</programlisting>
                        </para>
                    </listitem>
                    <listitem>
                        <para>Copy the <emphasis role="italic">saxon-license.lic</emphasis> file
                            that you have obtained from the Clouf Feeds team to the <emphasis
                                role="italic">your-home-directory/saxon-license</emphasis>
                            directory:</para>
                        <para>
                            <programlisting>cp &lt;<replaceable>path to saxon-license.lic</replaceable>> ~/saxon-license</programlisting>
                        </para>
                    </listitem>
                    <listitem>
                        <para> Export the <code>SAXON_HOME</code> environment variable by typing the
                            following at a command-line interface.</para>
                        <para>
                            <programlisting>EXPORT SAXON_HOME=&lt;<replaceable>your_home_directory</replaceable>>/saxon-license</programlisting>
                        </para>
                    </listitem>
                    <listitem>
                        <para>To start the build process, type the following command at a
                            command-line interface.</para>
                        <para>
                            <programlisting>$ mvn initialize</programlisting>
                        </para>
                    
                    </listitem>
                </orderedlist>
            </para>
            <para>
                <note>
                    <para>If you encounter any errors with your build, you can also copy the Saxon
                        license to the saxon-ee director in the <emphasis role="italic"
                            >.m2</emphasis> repository on your computer, for example: <emphasis
                            role="italic"
                            >~/.m2/repository/net/sf/saxon/saxon-ee/9.4.0.6/saxon-license.lic</emphasis>.
                        For more information, see the <link
                            xlink:href="https://github.com/rackerlabs/standard-usage-schemas/wiki/Developer-Set-Up-Guide"
                            >Developer Set Up Guide</link> on the Wiki.</para>
                </note>
            </para>
        </section>
        <section xml:id="Add_feed_to_wadl"><title>Adding the feed to the allfeeds.wadl file</title><para>After you have generated the appropriate schemas and WADLs, you need to add your feed to the
                    <emphasis role="bold">allfeeds.wadl</emphasis> file.</para>
            <para>Before adding your feed, you need to determine the validation mode of your feed: <itemizedlist>
                    <listitem>
                        <para>product feed</para>
                    </listitem>
                    <listitem>
                        <para>validated feed</para>
                    </listitem>
                </itemizedlist></para>
            <para>For more information about the validation modes, read <link
                    linkend="Feed_Validation">Feed validation</link>.</para>
            <section xml:id="Adding_resource_product_feed"><title>Adding a resource for a product feed</title>
            <para>To add a resource for a <emphasis role="bold">product feed</emphasis>, complete
                    the following steps:<orderedlist>
                        <listitem>
                            <para>Open <emphasis role="bold">allfeeds.wadl</emphasis> and add a new
                                resource for your feed.</para>
                            <itemizedlist>
                                <listitem>
                                    <para>If you want to make your feed available to <emphasis
                                            role="bold">internal</emphasis> users only, add the
                                        following resource:</para>
                                    <para>
                                        <programlisting>&lt;resource id="<replaceable>new_product</replaceable>" 
   path="<replaceable>new_product</replaceable>/events"
   type="wadl/feed.wadl#AtomFeed
         wadl/product.wadl#[<emphasis role="italic">NewProductServiceCode</emphasis>]"/>  </programlisting>
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>If you want to make your feed available to <emphasis
                                            role="bold">internal</emphasis> and <emphasis
                                            role="bold">external</emphasis> users, add the following
                                        resource:</para>
                                    <para>
                                        <programlisting>&lt;resource id="<replaceable>new_product</replaceable>"
    path="<replaceable>new_product</replaceable>/events"
    type="wadl/feed.wadl#AtomFeed
          wadl/product.wadl#[<emphasis role="italic">NewProductServiceCode</emphasis>]
          wadl/feed.wadl#TenantAtomFeed
          wadl/product.wadl#[<emphasis role="italic">NewProductServiceCode</emphasis>]<replaceable>Tenant</replaceable>"/></programlisting>
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para>To ensure that your feed can be tested, add the same resource
                                types that you added in the preceding step to the
                                    <code>functest1_events</code> and <code>functest2_events</code>
                                resources, as shown in the following example:</para>
                            <para>
                                <programlisting>   &lt;resource id="functest1_events"
        path="functest1/events" 
        type="wadl/feed.wadl#AtomFeed
            wadl/product.wadl#[<emphasis role="italic">NewProductServiceCode</emphasis>]
            wadl/feed.wadl#TenantAtomFeed
            wadl/product.wadl#[<emphasis role="italic">NewProductServiceCode</emphasis>]<replaceable>Tenant</replaceable>"/></programlisting>
                            </para>
                        </listitem>
                    </orderedlist>
                </para></section><section xml:id="Adding_resource_validated_feed"><title>Adding a resource for a validated feed</title>
            <para>To mark a feed to be <emphasis role="bold">validated</emphasis>, add the following
                    resource to <emphasis role="bold">allfeeds.wadl</emphasis>:</para>
            <para>
                <programlisting> &lt;resource id="<replaceable>new_product</replaceable>"
        path="<replaceable>new_product</replaceable>/events" 
        type="wadl/feed.wadl#AtomFeed wadl/feed.wadl#Validated"/></programlisting>
            </para>
                <para>The following example shows the resource for a validated feed:</para>
                <para>
                    <programlisting>   &lt;resource id="core_events"
        path="core/events" 
        type="wadl/feed.wadl#AtomFeed wadl/feed.wadl#Validated"/></programlisting>
                </para></section>
        </section>
        <section xml:id="Add_sample_files">
            <title>Adding samples</title>
            <para>You can use Maven to generate sample responses and entries for each version of
                your product schema. To use Maven, ensure that you have version 3.0.5 installed. For
                more information, see the Maven 3.0.5. <link
                    xlink:href="http://maven.apache.org/docs/3.0.5/release-notes.html">download
                    site</link>.</para>
            <para>To generate samples, type the following command:</para>
            <para>
                <programlisting> mvn -P generate-samples clean generate-sources -DproductSchema=sample_product_schemas/[new_product.xml] -DfeedName=[feed_name] </programlisting>
            </para>
            <para>The sample files are generated under the <emphasis role="bold"
                    >message_samples/[feed_name]</emphasis> directory and use the following naming
                conventions:</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic"> $serviceCode</emphasis>-<emphasis role="italic"
                            >$nsPart</emphasis>-<emphasis role="italic"
                            >$eventType</emphasis>-v<emphasis role="italic"
                        >$versionNum</emphasis>-entry.xml</para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis role="italic">$serviceCode</emphasis>-<emphasis role="italic"
                            >$nsPart</emphasis>-<emphasis role="italic"
                            >$eventType</emphasis>-v<emphasis role="italic"
                        >$versionNum</emphasis>-response.xml</para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic">$serviceCode</emphasis>-<emphasis role="italic"
                            >$nsPart</emphasis>-<emphasis role="italic"
                            >$resourceType</emphasis>-<emphasis role="italic"
                            >$eventType</emphasis>-v<emphasis role="italic"
                        >$versionNum</emphasis>-entry.xml</para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic">$serviceCode</emphasis>-<emphasis role="italic"
                            >$nsPart</emphasis>-<emphasis role="italic"
                            >$resourceType</emphasis>-<emphasis role="italic"
                            >$eventType</emphasis>-v<emphasis role="italic"
                        >$versionNum</emphasis>-response.xml</para>
                </listitem>
            </itemizedlist>
            <para>The following table provides a breakdown of the different elements in the naming
                convention.</para>
            <para>
                <table frame="border">
                    <caption>Naming convention for sample names</caption>
                    <col width="17%"/>
                    <col width="83%"/>
                    <thead>
                        <tr>
                            <th>Element</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><emphasis role="italic">$serviceCode</emphasis></td>
                            <td>Specifies the value of the <code>serviceCode</code> attribute in the
                                product schema.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="italic">$nsPart</emphasis></td>
                            <td>Specifies the last path segment in the product namespace. For
                                example, if the product namespace is <emphasis role="bold"
                                    >http://docs.rackspace.com/usage/widget</emphasis>, then the
                                    <emphasis role="italic">nsPart </emphasis>segment should be
                                named <emphasis role="bold">widget</emphasis>.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="italic">$resourceType</emphasis></td>
                            <td>Specifies the value of the <code>resourceType</code> attribute in
                                the sample event XML file</td>
                        </tr>
                        <tr>
                            <td><emphasis role="italic">$eventType</emphasis></td>
                            <td>Specifies the value of the <code>type</code> attribute of the
                                    <code>event</code> element in the sample event XML file.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>An example file name is <emphasis role="bold"
                    >support-account-account_support-create-v1-entry.xml</emphasis>.</para>
            <para>You might have to manually edit the generated samples to ensure that they are
                valid and semantically correct. For example, the product schema might contain XPath
                assertions that might not be met by the generated samples.</para>
            <para>For generated samples, the following assumptions are made:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>If the product schema requires a <code>resourceId</code> attribute,
                            its value is set to <emphasis role="italic"
                                >4a2b42f4-6c63-11e1-815b-7fcbcf67f549</emphasis>.</para>
                    </listitem>
                    <listitem>
                        <para>If the product schema contains <code>xpathAssertion</code> nodes, the
                            assertions might not be satisfied by the generated content.</para>
                    </listitem>
                    <listitem>
                        <para>No optional nodes or attributes are generated.</para>
                    </listitem>
                    <listitem>
                        <para>The <code>withEventType</code> and <code>withResource</code>
                            attributes are not processed.</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section xml:id="Add_feed_to_the_document"><title>Adding the feed to the documentation</title><para>As a next step, you need to add your feed to the documentation source files to ensure that the
                feed appears in the <emphasis role="italic">Cloud Feeds Developers Guide</emphasis>.
                These source files are located in the <emphasis role="bold">src/docbkx</emphasis>
                location.</para>
            <para>Edit the following files depending on whether your feed is for internal or
                external users:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">api-operations-internal.xml</emphasis> for
                                <emphasis role="bold">internal</emphasis> users</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">api-operations-external.xml</emphasis> for
                                <emphasis role="bold">external</emphasis> users</para>
                    </listitem>
                </itemizedlist>
  </para>
        <para>
                <note>
                    <para>Different resources are required for internal and external feeds.</para>
                </note>
            </para>
            <para>You need to add a <code>section</code> node to the appropriate source file that
                contains information specific to the feed, including a <code>title</code> attribute,
                as well as the corresponding URL and the appropriate resource hrefs.</para>
        <para>A <code>section</code> node for a new feed to be added to the <emphasis role="bold"
                    >api-operations-internal.xml</emphasis> source file should look like the
                following
                example:<programlisting>&lt;section xml:id="bigdata.product">
   &lt;title>Cloud Big Data&lt;/title>
   &lt;resources xmlns="http://wadl.dev.java.net/2009/02">
    &lt;resource href="../../allfeeds.wadl#bigdata_events"/>
    &lt;resource href="../../allfeeds.wadl#bigdata_events_getEntry_BigData"/>
   &lt;/resources>
&lt;/section></programlisting></para>
            <para>A <code>section</code> node for a new feed to be added to the <emphasis
                    role="bold">api-operations-external.xml</emphasis> source file should look like
                the following example:</para>
            <para>
                <programlisting>&lt;section xml:id="bigdata.product">
 &lt;title>Cloud Big Data&lt;/title>
 &lt;resources xmlns="http://wadl.dev.java.net/2009/02">
  &lt;resource href="../../allfeeds.wadl#bigdata_events_tenanted_feed"/>
  &lt;resource href="../../allfeeds.wadl#bigddata_events_getEntry_BigDataTenant"/>
 &lt;/resources>
&lt;/section></programlisting>
            </para></section>
        <section xml:id="Test_your_feed"><title>Testing the feed</title><para>After you have added all the appropriate resources for your feed, you can use Maven to test
                your feed and events.</para>
            <para>To test your feed, type the following command at a command-line interface:</para>
            <para>
                <programlisting>mvn test</programlisting>
            </para>
            <para>Running this test notifies you if any issues exist with the product schema or
                sample files.</para></section>
        <section xml:id="Submit_Pull_Request"><title>Submitting a pull request</title>
            <para>After you have completed all the steps for creating a feed, submit a pull request
                on the <link xlink:href="https://github.com/rackerlabs/standard-usage-schemas"
                        ><emphasis role="bold"
                        >https://github.com/rackerlabs/standard-usage-schemas</emphasis></link>
                repository.</para></section>
    </chapter>
</book>
